#include <iostream>
#include<cstdio>
#include<algorithm>
#include<vector>
#include<string>
#include<cmath>
#include<stack>
#include<queue>
#include<set>
#include<map>

using namespace std;

int main() {
	int t, n;
	cin >> t;
	char ch;
	while (t--)
	{
		cin >> n;
		set<string> s1, s2, s3, s4;
		string s;
		long long c1 = 0, c2 = 0, c3 = 0;
		for (int i = 0; i < n; i++)
		{
			cin >> s;
			s1.insert(s);
		}
		for (int i = 0; i < n; i++)
		{
			cin >> s;
			s2.insert(s);
		}
		for (int i = 0; i < n; i++)
		{
			cin >> s;
			s3.insert(s);
		}
		for (int i = 0; i < n; i++)
		{
			s = *s1.begin();
			s1.erase(s1.begin());
			if (s2.find(s) != s2.end() && s3.find(s) != s3.end())
			{
				s2.erase(s);
				s3.erase(s);
			}
			else if (s2.find(s) == s2.end() && s3.find(s) == s3.end())
				c1 += 3;
			else if (s2.find(s) != s2.end() && s3.find(s) == s3.end())
			{
				c1++;
				c2++;
				s2.erase(s);
			}
			else if (s2.find(s) == s2.end() && s3.find(s) != s3.end())
			{
				c1++;
				c3++;
				s3.erase(s);
			}
		}
		while(s2.size()>0)
		{
			s = *s2.begin();
			s2.erase(s);
			if (s3.find(s) == s3.end())
				c2 += 3;
			else if (s3.size()>0 && s3.find(s) != s3.end())
			{
				c2++;
				c3++;
				s3.erase(s);
			}
		}
		c3 += 3 * s3.size();
		cout << c1 << ' ' << c2 << ' ' << c3 << '\n';
	}
}