/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool hasPathSum(TreeNode* root, int targetSum) {
        if (root == NULL)
            return false;
        // current node has no children
        if (root->left == NULL && root->right == NULL) {
            if (root->val == targetSum)
                return true;
            else return false;
        }
        // it does have children
        bool flag_left = false, flag_right = false;
        if (root->left != NULL)
            flag_left = hasPathSum(root->left, targetSum - root->val);
        else 
            flag_left = false;
        if (root->right != NULL)
            flag_right = hasPathSum(root->right, targetSum - root->val);
        else 
            flag_right = false;
    
        return flag_left || flag_right;
    }
};