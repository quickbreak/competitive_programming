/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isSameTree(TreeNode* p, TreeNode* q) {
        // if (p == NULL) {
        //     if (q == NULL){
        //         return true;
        //     }
        //     else return false;
        // }

        queue<TreeNode*>qp, qq;
        TreeNode* up = p;
        TreeNode* uq = q;
        qp.push(up);
        qq.push(uq);
        while (qp.size() > 0 && qq.size() > 0) {
            up = qp.front();
            uq = qq.front();
            qp.pop();
            qq.pop();
            if (up == NULL || uq == NULL) {
                if (uq == up)
                    continue;
                else
                    return false;
            }

            if (up->val != uq->val)
                return false;
            
            qp.push(up->left);
            qp.push(up->right);
            qq.push(uq->left);
            qq.push(uq->right);
        }

        if (qq.size() == 0 && qp.size() == 0)
            return true;
        else 
            return false;
    }
};